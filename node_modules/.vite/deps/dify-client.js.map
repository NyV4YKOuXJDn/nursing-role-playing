{
  "version": 3,
  "sources": ["../../dify-client/index.js"],
  "sourcesContent": ["import axios from \"axios\";\nexport const BASE_URL = \"https://api.dify.ai/v1\";\n\nexport const routes = {\n  application: {\n    method: \"GET\",\n    url: () => `/parameters`,\n  },\n  feedback: {\n    method: \"POST\",\n    url: (message_id) => `/messages/${message_id}/feedbacks`,\n  },\n  createCompletionMessage: {\n    method: \"POST\",\n    url: () => `/completion-messages`,\n  },\n  createChatMessage: {\n    method: \"POST\",\n    url: () => `/chat-messages`,\n  },\n  getConversationMessages: {\n    method: \"GET\",\n    url: () => `/messages`,\n  },\n  getConversations: {\n    method: \"GET\",\n    url: () => `/conversations`,\n  },\n  renameConversation: {\n    method: \"POST\",\n    url: (conversation_id) => `/conversations/${conversation_id}/name`,\n  },\n  deleteConversation: {\n    method: \"DELETE\",\n    url: (conversation_id) => `/conversations/${conversation_id}`,\n  },\n  fileUpload: {\n    method: \"POST\",\n    url: () => `/files/upload`,\n  },\n  runWorkflow: {\n    method: \"POST\",\n    url: () => `/workflows/run`,\n  },\n};\n\nexport class DifyClient {\n  constructor(apiKey, baseUrl = BASE_URL) {\n    this.apiKey = apiKey;\n    this.baseUrl = baseUrl;\n  }\n\n  updateApiKey(apiKey) {\n    this.apiKey = apiKey;\n  }\n\n  async sendRequest(\n    method,\n    endpoint,\n    data = null,\n    params = null,\n    stream = false,\n    headerParams = {}\n  ) {\n    const headers = {\n      ...{\n        Authorization: `Bearer ${this.apiKey}`,\n        \"Content-Type\": \"application/json\",\n      },\n      ...headerParams\n    };\n\n    const url = `${this.baseUrl}${endpoint}`;\n    let response;\n    if (stream) {\n      response = await axios({\n        method,\n        url,\n        data,\n        params,\n        headers,\n        responseType: \"stream\",\n      });\n    } else {\n      response = await axios({\n        method,\n        url,\n        ...(method !== \"GET\" && { data }),\n        params,\n        headers,\n        responseType: \"json\",\n      });\n    }\n\n    return response;\n  }\n\n  messageFeedback(message_id, rating, user) {\n    const data = {\n      rating,\n      user,\n    };\n    return this.sendRequest(\n      routes.feedback.method,\n      routes.feedback.url(message_id),\n      data\n    );\n  }\n\n  getApplicationParameters(user) {\n    const params = { user };\n    return this.sendRequest(\n      routes.application.method,\n      routes.application.url(),\n      null,\n      params\n    );\n  }\n\n  fileUpload(data) {\n    return this.sendRequest(\n      routes.fileUpload.method,\n      routes.fileUpload.url(),\n      data,\n      null,\n      false,\n      {\n        \"Content-Type\": 'multipart/form-data'\n      }\n    );\n  }\n}\n\nexport class CompletionClient extends DifyClient {\n  createCompletionMessage(inputs, user, stream = false, files = null) {\n    const data = {\n      inputs,\n      user,\n      response_mode: stream ? \"streaming\" : \"blocking\",\n      files,\n    };\n    return this.sendRequest(\n      routes.createCompletionMessage.method,\n      routes.createCompletionMessage.url(),\n      data,\n      null,\n      stream\n    );\n  }\n\n  runWorkflow(inputs, user, stream = false, files = null) {\n    const data = {\n      inputs,\n      user,\n      response_mode: stream ? \"streaming\" : \"blocking\",\n    };\n    return this.sendRequest(\n      routes.runWorkflow.method,\n      routes.runWorkflow.url(),\n      data,\n      null,\n      stream\n    );\n  }\n}\n\nexport class ChatClient extends DifyClient {\n  createChatMessage(\n    inputs,\n    query,\n    user,\n    stream = false,\n    conversation_id = null,\n    files = null\n  ) {\n    const data = {\n      inputs,\n      query,\n      user,\n      response_mode: stream ? \"streaming\" : \"blocking\",\n      files,\n    };\n    if (conversation_id) data.conversation_id = conversation_id;\n\n    return this.sendRequest(\n      routes.createChatMessage.method,\n      routes.createChatMessage.url(),\n      data,\n      null,\n      stream\n    );\n  }\n\n  getConversationMessages(\n    user,\n    conversation_id = \"\",\n    first_id = null,\n    limit = null\n  ) {\n    const params = { user };\n\n    if (conversation_id) params.conversation_id = conversation_id;\n\n    if (first_id) params.first_id = first_id;\n\n    if (limit) params.limit = limit;\n\n    return this.sendRequest(\n      routes.getConversationMessages.method,\n      routes.getConversationMessages.url(),\n      null,\n      params\n    );\n  }\n\n  getConversations(user, first_id = null, limit = null, pinned = null) {\n    const params = { user, first_id: first_id, limit, pinned };\n    return this.sendRequest(\n      routes.getConversations.method,\n      routes.getConversations.url(),\n      null,\n      params\n    );\n  }\n\n  renameConversation(conversation_id, name, user, auto_generate) {\n    const data = { name, user, auto_generate };\n    return this.sendRequest(\n      routes.renameConversation.method,\n      routes.renameConversation.url(conversation_id),\n      data\n    );\n  }\n\n  deleteConversation(conversation_id, user) {\n    const data = { user };\n    return this.sendRequest(\n      routes.deleteConversation.method,\n      routes.deleteConversation.url(conversation_id),\n      data\n    );\n  }\n}"],
  "mappings": "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",
  "names": []
}
